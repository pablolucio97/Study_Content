=====================CLEAN CODE PRINCIPLES========================

1) Use meaningful names for variables, functions, class and cons-
tans. Examples:

variables:
let camelCase = ''

-------------------------------

constants:
const DAYS_IN_A_YEAR = 365;

-------------------------------

functions:
const getUserBankData = () => {
    //so something
}

-------------------------------

classes:
class Car = {
    //...
}

------------------------------------------------------------------

2) Avoid large functions. A function should to be as shorter as
possible and should to do a single action. Example:

// bad practice
const addSub = (a,b) => {
    // add
    const addition = a+b
    // sub
    const sub = a-b
    // returning as a string
    return `${addition}${sub}`
}

// good practice
// add
const add = (a,b) => {
    return a+b
}
// sub
const sub = (a,b) => {
    return a-b
}

------------------------------------------------------------------


3) Avoid comments, use it if really extremelly necessary. Your 
code should readable and auto-explaining.

------------------------------------------------------------------

4) Avoid deep nesting. Example:

// bad practice
const array = [ [ ['Shoaib Mehedi'] ] ]
array.forEach((firstArr) =>{
    firstArr.forEach((secondArr) => {
        secondArr.forEach((element) => {
            console.log(element);
        })
    })
})

// good practice
const array = [ [ ['Shoaib Mehedi'] ] ]
const getValuesOfNestedArray = (element) => {
    if(Array.isArray(element)){
        return getValuesOfNestedArray(element[0])
    }
    return element
}
getValuesOfNestedArray(array)

------------------------------------------------------------------

5) Don't repeat yoursel. Functions can't repeats. Example:

// bad practice
const array = [ [ ['Shoaib Mehedi'] ] ]
array.forEach((firstArr) =>{
    firstArr.forEach((secondArr) => {
        secondArr.forEach((element) => {
            console.log(element);
        })
    })
})

// good practice
const array = [ [ ['Shoaib Mehedi'] ] ]
const getValuesOfNestedArray = (element) => {
    if(Array.isArray(element)){
        return getValuesOfNestedArray(element[0])
    }
    return element
}
getValuesOfNestedArray(array)

------------------------------------------------------------------

6) Don't use magic numbers. Example:

//Bad practice
for(let i = 0; i < 50; i++){
    //do something
}

//Good practice
let NUMBER_OF_STUDENTS= 50
for(let i = 0; i < NUMBER_OF_STUDENTS; i++){
    //do something
}

--------------------------GENERAL TIPS----------------------------

Use descriptive names for variables and functions.

Use nouns in PascalCase at declaring classes.

Use snake and upppercase at declaring constants.

Use verbs in camelCase at declaring functions.