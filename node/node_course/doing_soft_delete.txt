----------------------------DOING-SOFT-DELETE----------------------------------

1) Run the command: npx knex migrate:make add_column_columnname_to_tablename

2) Configure the file of your new migration, example:

import Knex from "knex";

export async function up(knex: Knex){
    return knex.schema.alterTable('users', table => {
        table.timestamp('deleted_at')
    })

}


export async function down(knex: Knex){
    return knex.schema.alterTable('users', table => {
        table.dropColumn('deleted_at')
    })
}

3)Run again the new migration by the command:
npx knex migrate: latest

4)Create the method delete in your controller:

    async delete(request: Request, response: Response){
        try{
            const id = request.params.id
            const deleteUser = await db('users')
		.where('id', id).update('deleted_at', new Date())
            return response.json({message : `The user ${deleteUser} was deleted. `})
        }catch(error){
            console.log(error)
        }
    }

5)Alter your index to don't show users with the flag 'deleted_at':

    async index(request: Request, response: Response){
        try{
            const listUsers = await db('users').where('deleted_at', null)
            return response.json({listUsers})
        }catch(err){
            console.log(err)
        }
    }
    



