====Creating the back-end with Typescript template=====

1)Create the folder api of your project.

2)Inside the folder api, run the command npm init -y,
 and run: . code to open your file in the VS Code.

3)Install the typscript: npm install typscript -d 
and run the command typscript --init to create the
 initial config file for Typescript.

4)Create a new folder named src, and inside this, 
a new file named server.ts.

5)Install the packages: npm install express,  
npm install @types/express –d  and npm install 
ts-node-dev -d (enables to run typescript in the 
terminal).

7)Run the code npx ts-node-dev src/name_of_file.ts

8)Create the file routes.ts and server.ts inside 
src folder. Configure theses according to your 
project.

9)Create inside the folder src a file named 
knexfile.ts and configurre it.

10)Create a folder named database and inside this 
a new file named connection.ts.

11)Install the knex: npm install knex and your pa-
ckage: npm install sqlite3.

12)Configure the file connections.ts.

13)Identify and sketch map your back-end design of 
entities (class diagrams).

14)Create a new folder named migrations and inside 
this the migration of creating of your project and 
configure it. E.g: 01_create_users.ts

15)Run the command: npx knex migrate:latest 
--knexfile knexfile.ts migrate:latest.
