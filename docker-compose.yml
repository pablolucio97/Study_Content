version: '3.7'

services:
  app:
    build:
      context: node
    container_name: app
    entrypoint: dockerize -wait tcp://db:3306 -timeout 20s docker-entrypoint.sh # wait for mysql to be ready on 3306 port for 20s
    restart: always
    tty: true
    networks: 
      - node-network
    volumes:
      - ./node:/usr/src/app
    ports:
      - "3000:3000"
    depends_on:
      - db # the app container needs the db container to work properly, it should be done using dockerize or waitforit images

  db: # starts a database service configuration
    image: mysql:8.0 # uses mysql 8.0 as the image to handle the database service
    command: --innodb-use-native-aio=0 # required command for running mysql image correctly
    container_name: db
    restart: always # automatically restarts the database container if it falls
    tty: true # enables the container terminal
    volumes:
      - ./myapp_mysql:/var/lib/mysql # persists all data from /var/lib/mysql into myapp_mysql folder, even if the container is deleted
    environment: # are automatically generated at the container building
      MYSQL_DATABASE: ${MYSQL_DATABASE} # must come from .env file
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD} # must come from .env file
    networks:
      - node-network # defines that this container is inside the node-network

networks:
  node-network:
    driver: bridge
