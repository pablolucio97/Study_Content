========AUTOMATIZING EC2 INSTANCES DEPLOY PROCESS WITH GITHUB ACTIONS CI/CD========

When GitHub indentifies you've commited, the GitHub runs an action (GitHub actions) 
based on commands you've specified in the action. It is useful for avoiding acces-
sing the instance, and doing pull for updates the code.

1) Acess your Linux instance and generate a new ssh-key running ssh-keygen and pro-
viding a name for the key, and so running cat your_key.pub to copy this. With the
key copied, run cat >> authorized_keys, paste the key and press CTRL+D.

---------------------

2) Run cat github_actions, copy the key (copy from begin to end, all), on GitHub 
navigate to your repository, click on "Settings", "Secrets", "Actions", "New repo-
sitory secret", provide a name for your key and paste the key content.

---------------------

3) Create a new key with "SSH_HOST" name containing the instance IP (Private IP 
DNS on instance console page), other to user "SSH_USER" with the user created on 
Linux instance (if you've created one) and another to the port, "SSH_PORT" pas-
sing the port.

---------------------

4) On the GitHub click on "Actions", click on "Setup a workflow yourself", and 
write your action. Example:

name: CI

on:
  push:
    branches: [ "main" ]

  workflow_dispatch:

jobs:

  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Nodejs
        uses: actions/setup-node@v2
        with:
          node-version: 12.x
          
      - name: Install dependencies
        run: npm install
        
      - name: Build
        run: npm run build
        
      - uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          source: "., !/node_modules"
          target: "test"
          
      - name: Update API
        uses: appleboy/scp-action@master
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USER }}
          port: ${{ secrets.SSH_PORT }}
          key: ${{ secrets.SSH_KEY }}
          source: "., !/node_modules"
          script:  |
            cd ~/app/api/rentx
            npm install
            ./node_modules/.bin/typeorm migration:run
            pm2 restart rentx

---------------------

5) After wrote your action, click on "Start commit", provide a name and click on 
"Commit new file". Click on "Actions" to see the build log.

References:
https://github.com/appleboy/scp-action
<<<<<<< HEAD
=======

-------------------------------GENERAL TIPS--------------------------------------

GitHub Actions ususally watch only the alterations on main/master branch to do an 
updated.

Jobs are the work will be executed in the Action, in each job there is a sequence 
of tasks.

Be extremelly careful at writing .yml files, only use the "-" before the keywords
"name" and "uses" ("uses" only when there's not the keyword "name" before).
>>>>>>> 3e0a44f2e8a5c80a12afdd80f8794fb79ceacfaa
