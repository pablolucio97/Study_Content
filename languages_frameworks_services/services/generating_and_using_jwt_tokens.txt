===================================JWT=====================================

JWT is encoded token used to conced authorization for the client to access 
determined routes or do specific actions in your application. Each JWT to-
ken is unique and only be altered for who has created it, any change in the
data, changes the JWT token string. 

A JWT tokes is composed for three datas split for points: 

The header: Contains the algorithm used for generate the token and the to-
ken type (JWT). 

Payload: Contains the data that you want to transit, indexed by props (cla-
ims). 

Verify Signature: Is the sginature of your token. It contains a secret key 
that only your application should to know and concats all info of your to-
ken with the key.

------------------------GENERATING JWT TOKENS------------------------------

You can generate your token trought JWT.sign() which receive 4 paramns, the 
first param is the data that you want to encode (payload), the second is 
your private key for protect your token, the third options (you can pass 
the security algorithm, issue, expires time and other options) and the last 
is a callback function for resolve your promise (when inside a promise).


1)Install the jasonwebtoken and your types running npm i jsonwebtoken 
and npm i @types/jsonwebtoken.

2)Import the JWT:

import JWT from "jsonwebtoken";

3)Embed your JWT.sign() method inside a promise to might call it asyncly. In 
this example a JWT token is generated on post request:

export default {
  async showToken(req: Request, res: Response) {
    const ALGORITHM = "HS256";

    const generateToken = (payload) =>
      new Promise((resolve) => {
        JWT.sign(
          { payload },
          process.env.MYKEY,
          { algorithm: ALGORITHM },
          (err, token) => {
              if(err){
                  throw new Error('An error has ocurred.')
              }
              resolve(token)
          }
        );
      });

      const JWTDATA = {
          iss: 'my-api',
          sub: 'user.id',
          exp: Math.floor(Date.now() / 1000) * 3600
      }

      const token = await generateToken(JWTDATA)
      return res.json({"Token:" : token})

  }
 }