===========WORKING WITH AUTHENTICATIONS AND REACT-NATIVE-FIREBASE==========

Run yarn add @react-native-firebase/auth and  if you're not dit it, 
run also @react-native-firebase/app to work with authentication on Fire-
base.

------------------------ANONIMOUS AUTHENTICATION-------------------------

In the anonymous authentication, the user can't be authenticated in the 
application, he can access the application through info based on the 
app without providing a password and an identity will be created.

1) Goes to your Firebase Console, navigate to your project and click 
on 'Authentication', "Get Started', in the "Sign-in method" tab, click 
on "Anonimous", enable it and click on "Save".

--------------------

2) Import the auth from '@react-native-firebase/auth' and implements a 
function to signIn. Example:

import auth from '@react-native-firebase/auth'

  async function handleAnonymousSignIn(){
    const {user} = await auth().signInAnonymously()
    console.log(user)
  }

-----------------------EMAIL/PASSWORD AUTHENTICATION-----------------------

1) Goes to your Firebase Console, navigate to your project and click 
on 'Authentication', "Get Started', in the "Sign-in method" tab, click 
on "Email/Password", enable it and click on "Save".

--------------------

2) In your app, import the auth, provide a state for the email, and ano-
ther to password and call auth()createUserWithEmailAndPassword() inside 
your signIn function passing also your errors validation getting it 
through error.code. Example:

import auth from '@react-native-firebase/auth'

const [email, setEmail] = useState('')
const [password, setPassword] = useState('')

  async function handleEmailPassWordSignIn() {
    try {
     await auth()
      .createUserWithEmailAndPassword(email, password)
      .then(() => console.log('user authenticated successfully'))
      .catch(error => {
        switch (error.code) {
          case 'auth/email-already-in-use':
            return Alert.alert('Falha ao autenticar-se',
              'Email já em uso.');
            break;
          case 'auth/invalid-email':
            return Alert.alert('Falha ao autenticar-se',
              'Email inválido, cheque seu email.');
            break;
          case 'auth/weak-password':
            return Alert.alert('Falha ao autenticar-se',
              'Senha precisa ter pelo menos 6 dígitos');
            break;
            return
        }
        console.log(error.code)
      })
    } catch (error) {
      return
    }
  }