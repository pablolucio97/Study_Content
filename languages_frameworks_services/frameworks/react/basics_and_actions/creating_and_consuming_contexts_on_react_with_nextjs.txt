=======================CREATING AND CONSUMING CONTEXTS ON REACT=======================

1) Create a new folder named context and inside this a new file wi your context with 
your context. Example:

import { createContext, useState } from 'react'

interface IChallgensProviderProps{
    children: ReactNode;
}

export const ChallengesContext = createContext({})


export function ChallengesProvider({children} : IChallgensProviderProps){
    const [level, setLevel] = useState(1);

    function levelUp(){
        setLevel(level + 1);
    }

    return (
        <ChallengesContext.Provider value={{ level, levelUp}}>
            {children}
        </ChallengesContext.Provider>
    )

}

--------------------------------------------------------------------------------------

2) Provides your context on _app.tsx:

import '../styles/global.css'

import { ChallengesProvider } from '../context/ChallengesContext'

function MyApp({ Component, pageProps }) {
  return (
    <ChallengesProvider>
      <Component {...pageProps}/>
    </ChallengesProvider>

  )
}

export default MyApp


--------------------------------------------------------------------------------------

3) Imports and consumes your context in the desired file, example:

import { useContext} from 'react'
import { MyContext} from '../context/MyContext'

const consumingMyContext = useContext(MyContext)

console.log(consumingMyContext)

