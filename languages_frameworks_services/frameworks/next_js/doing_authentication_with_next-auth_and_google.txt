==============================DOING AUTHENTICATION WITH NEXT-AUTH AND GOOGLE=============================

1) Install the next-auth running yarn add next-auth and create a new file named 
[...nextauth].tsx inside of pages/api/auth.

----------------------------

2) Visit https://console.cloud.google.com/apis/credentials e navigate: Create Credentials > OAuth Cli-
ent ID" > Configure Consent Screen > Select the user type (external) > Fill the required fields > Save
and Continue > Save and Continue > Save and Continue > Back to Dashboard > Credentials  Create Creden-
tials > OAuth Client ID > Select the Application type and provide a name for it > Create. Your Client
ID and Client Secret keys will be generated, cpy them and use in your .env.local file trought the vars 
GOOGLE_CLIENT_ID and GOOGLE_CLIENT_SECRET.

----------------------------

3) Inside of [...nextauth].tsx, import the NextAuth and Providers, defines an
object of configuration containing the provider used and your settings and 
export the NextAuth function passsing this configuration object as paramns.

import {NextApiRequest, NextApiResponse} from 'next'
import NextAuth from 'next-auth'
import Providers  from 'next-auth/providers'

const options = {
  providers: [
    Providers.Google({
      clientId: process.env.GOOGLE_CLIENT_ID,
      clientSecret: process.env.GOOGLE_CLIENT_SECRET,
      authorizationUrl:
    'https://accounts.google.com/o/oauth2/v2/auth?prompt=consent&access_type=offline&response_type=code'
    })
  ],
  session: {
    jwt: true,
    maxAge: 30 * 24 * 60 * 60
  },
  jwt:{
    secret: process.env.JWT_SECRET
  }
}

export default (req: NextApiRequest, res: NextApiResponse) => NextAuth(req, res, options);

----------------------------

4) Inject the Provider context inside _app.tsx. Example:

import {Provider} from 'next-auth/client'

export default function MyApp(props : any) {
  const { Component, pageProps } = props;
  return (
    <React.Fragment>
      <Head>
        <title>My page</title>
      </Head>
      <Provider session={pageProps.session}>
        ...
      </Provider>
    </React.Fragment>
  );
}

----------------------------

5) Defines the NEXTAUTH_URL inside your .env.local file:

NEXTAUTH_URL=http://localhost:3000

----------------------------

6) Inside your desired file/component import the signIn and useSession from NextAuth. Use the signIn
in a button to do the login and useSession for control if the user is authenticated or not. Example:


import { signIn, useSession } from 'next-auth/client'

export default function Home(){

  const [session] = useSession()
  
  return (
    {session?
    <>
        <h1>Welcome!</h1>
    </>
    :
     <>
      <Button
        variant="outlined"
        color="secondary"
        startIcon={<AccountCircle />}
        onClick={() => signIn('google')}
      >
        Fazer login
      </Button>
    </>
    }
  );
}

