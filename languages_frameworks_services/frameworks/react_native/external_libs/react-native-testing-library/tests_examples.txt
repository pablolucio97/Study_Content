============================EXAMPLES OF TESTS==============================

it('should showns correctly user input name placeholder', () => {
    const { getByPlaceholderText } = render(<Profile />)
    const inputName = getByPlaceholderText('Nome')
    expect(inputName.props.placeholder).toBeTruthy()
})

-------------------

it('user value should be in the input', () => {
    const {getByTestId} = render(<Profile />)
    const inputName = getByTestId('test-name')
    expect(inputName.props.value).toEqual('Pablo')
})

-------------------

it('should contains text node Profile', () => {
    const { getByTestId } = render(<Profile />)
    const title = getByTestId('test-title')
    expect(title.props.children).toContain('Profile')
})

-------------------

it('Should display async Alert with friends quantity', () => {

    async function showFriendsQuantity() {
        await setTimeout(() => {
            Alert.alert('Number of friends', '5')
        }, 1000)
    }

    const mockedShowFriendsQuantity = jest.fn(() => 
        { showFriendsQuantity() })

    const { getByTestId } = render(
        <Button
            title='Some title'
            onPress={mockedShowFriendsQuantity}
        />
    )

    const buttonComponent = getByTestId('button-test')
    fireEvent.press(buttonComponent)

    act(async () => await mockedShowFriendsQuantity)

    expect(buttonComponent).toBeTruthy()
    expect(mockedShowFriendsQuantity).toBeCalled()
})
