-----------------------ENCRIPTING PASSWORD WITH BCRYPTJS-------------------------

1) Run yarn add bcryptjs and yarn add @types/bcryptjs -D to install the Bcrypt.

--------------------

2) In your useCaseMethod file, import the function hash from bcryptjs passing the 
password as and first argument and the password security level as the second one, 
call this function at moment creating your user. Example:

import { inject, injectable } from "tsyringe";
import {hash} from 'bcryptjs';

import { ICreateUserDto } from './../../dtos/ICreateUserDto';
import { IUsersRepository } from "../../repositories/implementations/IUserRepo";

@injectable()
class CreateUserUseCase {

    constructor(
        @inject("UsersRepository")
        private usersRepository: IUsersRepository
    ){}

    async execute({
        name,
        password,
        email,
        driver_license
    }: ICreateUserDto) : Promise<void>{

        const passwordHash = await hash(password, 8);

        await this.usersRepository.create({
            name,
            password: passwordHash,
            email,
            driver_license
        })
    }
}

export { CreateUserUseCase }