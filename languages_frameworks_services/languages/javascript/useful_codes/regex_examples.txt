
============================REGEX EXAMPLES=============================

const searchSpecificString = () => {
	const sentence = 'Better than yesterday'
	const checkSentence = /Better/g
	const result = sentence.match(checkSentence)
	result != null? console.log(result) : 
	console.log('Not found the desired string') 
}

-----------------------------------------------------------------------

const searchAnyString = () => {
	const sentence = 'Beetter than yesterday'
	const checkSentence = /([a-z])/gi
	const result = sentence.match(checkSentence)
	console.log(result)
}

-----------------------------------------------------------------------

const searchAnyDigit = () => {
	const numbers = '1,2,3,3,33,33,23'
	const checkNumbers = /(\d)/g //or /[0-9]/g 
	const result = numbers.match(checkNumbers)
	console.log(result)
}

-----------------------------------------------------------------------

const verifySpaces = () => {
	const sentence = 'Beetter than yesterday'
	const checkSentence = /(\s)/g
	const result= sentence.match(checkSentence)
	result !== null? console.log(result) : 
console.log('No has spaces found')
}

-----------------------------------------------------------------------

const checkingEmail = () => {
	//acepts only @hotmail.com and @yahoo.com format
	const email = 'camila@yahoo.com'
	const checkEmail = /@+\w+\W+\w+/g
	const result = email.match(checkEmail)
	result =='@hotmail.com' || result == 
	'@yahoo.com' ? console.log('Aproved domain') : 
	console.log('Reproved domain')
	console.log(result)
}

-----------------------------------------------------------------------

const checkCPF = () => {
	const cpf = '119.294.216-81'
	const checkCPF = /\d{3}\.\d{3}\.\d{3}\-\d{2}/g
	const cpfWithOutSpecialCharacters = /\d+/g
	const result = cpf.match(checkCPF)
	const result2 = cpf.match(cpfWithOutSpecialCharacters)
	cpf == result || cpf == result2 ? console.log('CPF Aproved') : 
	console.log('CPF Reproved')
	console.log(result2)
}

-----------------------------------------------------------------------

const getDifferentDigit = () => {
	const sentence = 'I borned in 1995'
	const checkSentence = /[^0-9]/g //or /(\D)/g
	const result = sentence.match(checkSentence)
	console.log(result)
}

-----------------------------------------------------------------------

const searchAlphaNumeric = () => {
	const sentence = 'Realize 100%'
	const checkSentence = /\w/g
	const result = sentence.match(checkSentence)
	console.log(result)
}

-----------------------------------------------------------------------

const searchSpecialCharacters = () => {
	const sentence = 'Realze 100%'
	const checkSentence = /\W/g
	const result = sentence.match(checkSentence)
	console.log(result)
}

-----------------------------------------------------------------------

const groupNumbers = () => {
	const numbers = '122212 121212 1111 11'
	const checkNumbers = /\d{4}/g
	const result = numbers.match(checkNumbers)
	console.log(result)
}

-----------------------------------------------------------------------

const getWordsWithInitialsLetterA = () => {
	const sentence = 'Ada an a beautiful woman'
	const checkSentence = /\b[Aa]\w+/g
	const result = sentence.match(checkSentence)
	console.log(result)
}

-----------------------------------------------------------------------

const checkPlateCar = () => {
	const plate = 'ABC-1234'
	const checkPlate = plate.match(/([A-Z]){3}\-\d{4}/g)
	checkPlate == null? console.log('Not found') : 
	console.log(checkPlate)
}

-----------------------------------------------------------------------

const checkStringInitialsAndEnd = () => {
	const str = 'Sou programador digital'
	const pattern1 = /^Sou ./g
	const pattern2 = /.digital$/g
	const pattern3 = /./g
	const result3 = str.match(pattern3)
	console.log(pattern1.test(str))
	console.log(pattern2.test(str))
	console.log(result3)
}
